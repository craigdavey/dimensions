// Generated by CoffeeScript 1.10.0
(function() {
  var ExifScanner, JPEGScanner, Scanning;

  Scanning = require("./scanning");

  ExifScanner = require("./exif_scanner");

  JPEGScanner = (function() {
    var APP1_MARKER, EOI_MARKER, SOF0_MARKER, SOI_MARKER, SOS_MARKER, func, name;

    module.exports = JPEGScanner;

    function JPEGScanner() {
      this.angle = 0;
    }

    for (name in Scanning) {
      func = Scanning[name];
      JPEGScanner.prototype[name] = func;
    }

    SOI_MARKER = [0xFF, 0xD8];

    SOF0_MARKER = 0xC0;

    APP1_MARKER = 0xE1;

    SOS_MARKER = 0xDA;

    EOI_MARKER = 0xD9;

    JPEGScanner.prototype.scan = function(buffer) {
      var marker;
      this.data = buffer;
      this.position = 0;
      if (this.data.length > SOI_MARKER.length) {
        this.advance(SOI_MARKER.length);
        while (marker = this.readNextFrameMarker()) {
          switch (marker) {
            case SOF0_MARKER:
              this.scanZeroFrame();
              break;
            case APP1_MARKER:
              this.scanApp1Frame();
              break;
            case EOI_MARKER:
            case SOS_MARKER:
              break;
            default:
              this.skipFrame();
          }
        }
      }
      return (this.width != null) && (this.height != null) && (this.angle != null);
    };

    JPEGScanner.prototype.readNextFrameMarker = function() {
      var c;
      if (this.position < this.data.length) {
        while (c !== 0xFF) {
          c = this.readChar();
        }
        while (c === 0xFF) {
          c = this.readChar();
        }
        return c;
      }
    };

    JPEGScanner.prototype.scanZeroFrame = function() {
      var height, length, ref, size, width;
      length = this.data.readUInt16BE(this.position);
      if ((this.position + length) > this.data.length) {
        return this.position = this.data.length;
      } else {
        this.advance(2);
        this.advance(1);
        height = this.data.readUInt16BE(this.position);
        this.advance(2);
        width = this.data.readUInt16BE(this.position);
        this.advance(2);
        size = this.data[this.position];
        if (length === (size * 3) + 8) {
          return ref = [width, height], this.width = ref[0], this.height = ref[1], ref;
        }
      }
    };

    JPEGScanner.prototype.scanApp1Frame = function() {
      var frame, ref, scanner;
      if (frame = this.readFrame()) {
        if (frame.slice(2, 6).toString() === "Exif" && (frame[6] === (ref = frame[7]) && ref === 0)) {
          scanner = new ExifScanner;
          scanner.scan(frame.slice(8));
          switch (scanner.orientation) {
            case "left_top":
            case "right_top":
              return this.angle = 90;
            case "bottom_right":
              return this.angle = 180;
            case "right_bottom":
            case "left_bottom":
              return this.angle = 270;
          }
        }
      }
    };

    JPEGScanner.prototype.readFrame = function() {
      var length;
      length = this.data.readUInt16BE(this.position);
      if ((this.position + length) > this.data.length) {
        this.position = this.data.length;
        return false;
      } else {
        return this.readData(length);
      }
    };

    JPEGScanner.prototype.skipFrame = function() {
      var length;
      length = this.data.readUInt16BE(this.position);
      if ((this.position + length) > this.data.length) {
        return this.position = this.data.length;
      } else {
        return this.advance(length);
      }
    };

    return JPEGScanner;

  })();

}).call(this);
