// Generated by CoffeeScript 1.10.0
(function() {
  var ExifScanner, Scanning, TIFFScanning,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Scanning = require("./scanning");

  TIFFScanning = require("./tiff_scanning");

  module.exports = ExifScanner = (function() {
    var ORIENTATIONS, ORIENTATION_TAG, func, name;

    function ExifScanner() {}

    for (name in Scanning) {
      func = Scanning[name];
      ExifScanner.prototype[name] = func;
    }

    for (name in TIFFScanning) {
      func = TIFFScanning[name];
      ExifScanner.prototype[name] = func;
    }

    ORIENTATION_TAG = 0x0112;

    ORIENTATIONS = ["top_left", "top_right", "bottom_right", "bottom_left", "left_top", "right_top", "right_bottom", "left_bottom"];

    ExifScanner.prototype.scan = function(data) {
      this.data = data;
      this.position = 0;
      this.scanHeader();
      this.scan_ifd((function(_this) {
        return function(tag) {
          var value;
          if (tag === ORIENTATION_TAG) {
            value = _this.readIntegerValue();
            if (_this.validOrientation(value)) {
              return _this.orientation = ORIENTATIONS[value - 1];
            }
          }
        };
      })(this));
      return this.orientation;
    };

    ExifScanner.prototype.validOrientation = function(value) {
      var i, ref, results;
      return indexOf.call((function() {
        results = [];
        for (var i = 1, ref = ORIENTATIONS.length; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--){ results.push(i); }
        return results;
      }).apply(this), value) >= 0;
    };

    return ExifScanner;

  })();

}).call(this);
